{"version":3,"sources":["components/navigation/Navigation.js","components/logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/SignIn/SignIn.js","components/Register/Register.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js","components/logo/brain.png"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","paddingInlineEnd","onClick","className","Logo","options","max","height","width","src","brain","alt","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","SignIn","id","htmlfor","name","value","Register","Rank","FaceRecognition","imageUrl","box","heigh","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","app","Clarifai","App","apiKey","particlesOptions","particles","number","density","enable","value_area","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","route","this","params","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"kVAmCeA,EAjCI,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,cACjB,OADgD,EAAhBC,WAG5B,yBAAKC,MAAO,CAACC,QAAQ,OAAQC,eAAe,WAAYC,iBAAkB,SACtE,uBACAC,QAAS,kBAAMN,EAAc,YAC7BO,UAAU,2CAFV,aASA,yBAAKL,MAAO,CAACC,QAAQ,OAAQC,eAAe,WAAYC,iBAAkB,SAC1E,uBACAC,QAAS,kBAAMN,EAAc,WAC7BO,UAAU,2CAFV,WAKA,uBACAD,QAAS,kBAAMN,EAAc,aAC7BO,UAAU,2CAFV,c,kCCHGC,G,OAbF,WACT,OAEA,yBAAKD,UAAU,WACX,kBAAC,IAAD,CAAMA,UAAU,oBAAoBE,QAAS,CAAEC,IAAM,IAAMR,MAAO,CAAES,OAAQ,IAAKC,MAAO,MACpF,yBAAKL,UAAU,cACV,yBAAMM,IAAKC,IAAOC,IAAI,cCSxBC,G,OAjBO,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,eACnC,OACG,6BACI,uBAAGX,UAAU,MACR,uEAEL,yBAAKA,UAAW,UACb,yBAAKA,UAAU,gCACT,2BAAOA,UAAU,qBAAqBY,KAAK,OAAOC,SAAUH,IAC5D,4BAAQV,UAAU,sDAAsDD,QAASY,GAAjF,eC2BLG,EApCA,SAAC,GAAqB,IAApBrB,EAAmB,EAAnBA,cACf,OACI,6BAASO,UAAU,mEACf,0BAAMA,UAAU,gBACZ,yBAAKA,UAAU,YACX,8BAAUe,GAAG,UAAUf,UAAU,6BAC7B,4BAAQA,UAAU,kBAAlB,WACA,yBAAKA,UAAU,OACX,2BAAOA,UAAU,oBAAoBgB,QAAQ,iBAA7C,SACA,2BAAOhB,UAAU,qEAAqEY,KAAK,QAAQK,KAAK,gBAAgBF,GAAG,mBAE/H,yBAAKf,UAAU,OACX,2BAAOA,UAAU,oBAAoBgB,QAAQ,YAA7C,YACA,2BAAOhB,UAAU,uEAAuEY,KAAK,WAAWK,KAAK,WAAWF,GAAG,eAInI,yBAAKf,UAAU,IACX,2BACAD,QAAS,kBAAMN,EAAc,SAC7BO,UAAU,uEACTY,KAAK,SACJM,MAAM,aAEZ,yBAAKlB,UAAU,uBACX,uBACED,QAAS,kBAAMN,EAAc,aAC7BO,UAAU,wBAFZ,iBCWPmB,EApCE,SAAC,GAAqB,IAApB1B,EAAmB,EAAnBA,cACjB,OACI,6BAASO,UAAU,mEACf,0BAAMA,UAAU,gBACZ,yBAAKA,UAAU,YACX,8BAAUe,GAAG,UAAUf,UAAU,6BAC7B,4BAAQA,UAAU,kBAAlB,YACA,yBAAKA,UAAU,OACX,2BAAOA,UAAU,oBAAoBgB,QAAQ,QAA7C,QACA,2BAAOhB,UAAU,qEAAqEY,KAAK,OAAOK,KAAK,OAAOF,GAAG,UAErH,yBAAKf,UAAU,OACX,2BAAOA,UAAU,oBAAoBgB,QAAQ,iBAA7C,SACA,2BAAOhB,UAAU,qEAAqEY,KAAK,QAAQK,KAAK,gBAAgBF,GAAG,mBAE/H,yBAAKf,UAAU,OACX,2BAAOA,UAAU,oBAAoBgB,QAAQ,YAA7C,YACA,2BAAOhB,UAAU,uEAAuEY,KAAK,WAAWK,KAAK,WAAWF,GAAG,eAInI,yBAAKf,UAAU,IACX,2BACAD,QAAS,kBAAMN,EAAc,SAC7BO,UAAU,wEACTY,KAAK,SACJM,MAAM,kBCbfE,EAbF,WACT,OACI,yBAAKpB,UAAU,OACZ,yBAAKA,UAAU,YACV,mCAEL,yBAAKA,UAAU,YACV,QCIDqB,G,OAXS,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,IACnC,OACE,yBAAKvB,UAAU,aACb,yBAAKA,UAAU,gBACb,yBAAKe,GAAG,aAAaP,IAAI,GAAGF,IAAKgB,EAAUjB,MAAM,QAAQmB,MAAM,SAC/D,yBAAKxB,UAAU,eAAeL,MAAO,CAAC8B,IAAKF,EAAIG,OAAQC,MAAOJ,EAAIK,SAAUC,OAAQN,EAAIO,UAAWC,KAAMR,EAAIS,e,iBCQ/GC,G,OAAM,IAAIC,IAASC,IAAI,CAC3BC,OAAQ,sCAIJC,EAAmB,CACvBC,UAAW,CACTC,OAAQ,CACNrB,MAAO,GACPsB,QAAS,CACPC,QAAQ,EACRC,WAAY,QAsGLP,E,kDA9Fb,aAAe,IAAD,8BACZ,gBAWFQ,sBAAwB,SAACC,GACvB,IAAMC,EAAeD,EAAKE,QAAQ,GAAGF,KAAKG,QAAQ,GAAGC,YAAYC,aAC3DC,EAAQC,SAASC,eAAe,cAChC/C,EAAQgD,OAAOH,EAAM7C,OACrBD,EAASiD,OAAOH,EAAM9C,QAE5B,MAAM,CACJ4B,QAAQa,EAAaS,SAASjD,EAC9BqB,OAAOmB,EAAaU,QAAQnD,EAC5BwB,SAASvB,EAAOwC,EAAaW,UAAUnD,EACvCyB,UAAU1B,EAAQyC,EAAaY,WAAWrD,IAtBhC,EA2BZsD,eAAiB,SAACnC,GAChB,EAAKoC,SAAS,CAACpC,IAAIA,KA5BT,EA+BhBb,cAAe,SAACkD,GAChB,EAAKD,SAAS,CAACE,MAAOD,EAAME,OAAO5C,SAhCnB,EAqChBP,eAAiB,WACf,EAAKgD,SAAS,CAACrC,SAAU,EAAKyC,MAAMF,QACpC5B,EAAI+B,OACDC,QACC/B,IAASgC,kBAET,EAAKH,MAAMF,OAEZM,MAAK,SAAAC,GAAQ,OACb,EAAKV,eAAe,EAAKf,sBAAsByB,OAC/CC,OAAM,SAAAC,GAAG,OACRC,QAAQC,IAAIF,OAhDF,EAmDhB7E,cAAgB,SAACgF,GACD,YAAVA,EACF,EAAKd,SAAS,CAACjE,YAAY,IACR,SAAV+E,GACT,EAAKd,SAAS,CAACjE,YAAY,IAE7B,EAAKiE,SAAS,CAACc,MAAOA,KAvDpB,EAAKV,MAAQ,CACXF,MAAO,GACPvC,SAAU,GACVC,IAAI,GACJkD,MAAM,SACN/E,YAAY,GAPF,E,qDA2DJ,IAAD,EACsCgF,KAAKX,MAA1CrE,EADD,EACCA,WAAY4B,EADb,EACaA,SAAUmD,EADvB,EACuBA,MAAOlD,EAD9B,EAC8BA,IACrC,OACE,yBAAKvB,UAAU,OACZ,kBAAC,IAAD,CAAWA,UAAU,YACpB2E,OAAQtC,IAEV,kBAAC,EAAD,CAAY3C,WAAYA,EAAYD,cAAeiF,KAAKjF,gBAClC,SAArBiF,KAAKX,MAAMU,MAEZ,6BACI,kBAAC,EAAD,MACN,kBAAC,EAAD,MACA,kBAAC,EAAD,CACA/D,cAAegE,KAAKhE,cACpBC,eAAgB+D,KAAK/D,iBACrB,kBAAC,EAAD,CAAiBY,IAAKA,EAAKD,SAAUA,KAIrB,WAAVmD,EACE,kBAAC,EAAD,CAAQhF,cAAeiF,KAAKjF,gBAC5B,kBAAC,EAAD,CAAUA,cAAeiF,KAAKjF,qB,GAlF1BmF,aCtBEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFjC,SAASC,eAAe,SDuHpB,kBAAmBiC,WACrBA,UAAUC,cAAcC,MACrBpB,MAAK,SAAAqB,GACJA,EAAaC,gBAEdpB,OAAM,SAAAqB,GACLnB,QAAQmB,MAAMA,EAAMC,a,mBEzI5BC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.1feea119.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) => {\r\n    if(isSignedIn){ return(\r\n       \r\n        <nav style={{display:'flex', justifyContent:'flex-end', paddingInlineEnd: '25px'}}>\r\n            <p \r\n            onClick={() => onRouteChange('signout')} \r\n            className='f3 link dim black underline pa3 pointer'>\r\n                Sign Out\r\n            </p>\r\n        </nav>)\r\n        }\r\n        else{\r\n            return(\r\n            <nav style={{display:'flex', justifyContent:'flex-end', paddingInlineEnd: '25px'}}>\r\n            <p \r\n            onClick={() => onRouteChange('signin')} \r\n            className='f3 link dim black underline pa3 pointer'>\r\n                Sign In\r\n            </p>\r\n            <p \r\n            onClick={() => onRouteChange('register')} \r\n            className='f3 link dim black underline pa3 pointer'>\r\n                Register\r\n            </p>\r\n        </nav>\r\n        \r\n           \r\n        \r\n            )\r\n        }\r\n    \r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './brain.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n    return(\r\n   /* margin 4, margin-top:0;*/      \r\n    <div className='ma4 mt0'> \r\n        <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 35 }} style={{ height: 150, width: 150 }} >\r\n            <div className=\"Tilt-inner\">\r\n                 <img  src={brain} alt=\"logo\" />\r\n                 </div>\r\n        </Tilt>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from 'react'\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\r\n    return(\r\n       <div>\r\n           <p className='f3'>\r\n               {'This Magic Brain will detect faces in your pictures. Give it a try!'}\r\n           </p>\r\n           <div className ='center'>\r\n              <div className='form center pa4 br3 shadow-5'> \r\n                    <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange} />\r\n                    <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onButtonSubmit}>Detect</button>\r\n               </div>\r\n           </div>\r\n           \r\n       </div>\r\n    )\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\n\r\nconst SignIn = ({onRouteChange}) => {\r\n  return (\r\n      <article className=\"br3 ba  b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n          <main className=\"pa4 black-80\">\r\n              <div className=\"measure \">\r\n                  <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                      <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                      <div className=\"mt3\">\r\n                          <label className=\"db fw6 lh-copy f6\" htmlfor=\"email-address\">Email</label>\r\n                          <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\" id=\"email-address\" />\r\n                      </div>\r\n                      <div className=\"mv3\">\r\n                          <label className=\"db fw6 lh-copy f6\" htmlfor=\"password\">Password</label>\r\n                          <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\" id=\"password\" />\r\n                      </div>\r\n                      \r\n                  </fieldset>\r\n                  <div className=\"\">\r\n                      <input \r\n                      onClick={() => onRouteChange('home')}\r\n                      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                       type=\"submit\"\r\n                        value=\"Sign in\" />\r\n                  </div>\r\n                  <div className=\"lh-copy mt3 pointer\">\r\n                      <p \r\n                        onClick={() => onRouteChange('register')}\r\n                        className=\"f6 link dim black db\">Register</p>\r\n                     \r\n                  </div>\r\n              </div>\r\n          </main>\r\n      </article>\r\n  );\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\n\r\nconst Register = ({onRouteChange}) => {\r\n  return (\r\n      <article className=\"br3 ba  b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n          <main className=\"pa4 black-80\">\r\n              <div className=\"measure \">\r\n                  <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                      <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                      <div className=\"mt3\">\r\n                          <label className=\"db fw6 lh-copy f6\" htmlfor=\"name\">Name</label>\r\n                          <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\" id=\"name\" />\r\n                      </div>\r\n                      <div className=\"mt3\">\r\n                          <label className=\"db fw6 lh-copy f6\" htmlfor=\"email-address\">Email</label>\r\n                          <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\" id=\"email-address\" />\r\n                      </div>\r\n                      <div className=\"mv3\">\r\n                          <label className=\"db fw6 lh-copy f6\" htmlfor=\"password\">Password</label>\r\n                          <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\" id=\"password\" />\r\n                      </div>\r\n                      \r\n                  </fieldset>\r\n                  <div className=\"\">\r\n                      <input \r\n                      onClick={() => onRouteChange('home')}\r\n                      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib \"\r\n                       type=\"submit\"\r\n                        value=\"Register\"\r\n                         />\r\n                  </div>\r\n                 \r\n              </div>\r\n          </main>\r\n      </article>\r\n  );\r\n}\r\n\r\nexport default Register;","import React from 'react'\r\n\r\n\r\nconst Rank = () => {\r\n    return(\r\n        <div className='pa2'>\r\n           <div className='white f3'>\r\n               {'Damjan, your current rank is...'}\r\n           </div>\r\n           <div className='white f1'>\r\n               {'#1'}\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n  return (\r\n    <div className='center ma'>\r\n      <div className='absolute mt2'>\r\n        <img id='inputimage' alt='' src={imageUrl} width='300px' heigh='auto'/>\r\n        <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaceRecognition;","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\n\nimport Clarifai from 'clarifai';\nimport './App.css';\n\n\n\n\nconst app = new Clarifai.App({\n  apiKey: \"ac2cb0fc836f4aff9cf7243626acd7ae\",\n});\n\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box:{},\n      route:'signin',\n      isSignedIn: false\n      \n    }\n  }\n\n  calculateFaceLocation = (data) =>{\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n\n    return{\n      leftCol:clarifaiFace.left_col*width,\n      topRow:clarifaiFace.top_row*height,\n      rightCol:width-(clarifaiFace.right_col*width),\n      bottomRow:height-(clarifaiFace.bottom_row*height)\n    }\n    \n    }\n\n    displayFaceBox = (box) => {  \n      this.setState({box:box});\n    }\n\nonInputChange =(event) =>{\nthis.setState({input: event.target.value});\n}\n\n\n\nonButtonSubmit = () => {\n  this.setState({imageUrl: this.state.input})\n  app.models\n    .predict(\n      Clarifai.FACE_DETECT_MODEL,\n      // THE JPG\n      this.state.input \n    )\n    .then(response => \n     this.displayFaceBox(this.calculateFaceLocation(response)))\n    .catch(err => \n      console.log(err));\n}\n\nonRouteChange = (route) => {\n  if (route === 'signout') {\n    this.setState({isSignedIn: false})\n  } else if (route === 'home') {\n    this.setState({isSignedIn: true})\n  }\n  this.setState({route: route});\n}\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state; /*DESTRUCTURING ----------------*/\n    return (\n      <div className=\"App\">\n         <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        {this.state.route === 'home' \n        ?  \n        <div>\n            <Logo />\n      <Rank />\n      <ImageLinkForm \n      onInputChange={this.onInputChange} \n      onButtonSubmit={this.onButtonSubmit}/>\n      <FaceRecognition box={box} imageUrl={imageUrl}/>\n      </div>\n          :\n          (\n            route === 'signin'\n            ? <SignIn onRouteChange={this.onRouteChange}/>\n            : <Register onRouteChange={this.onRouteChange}/>\n          )\n          \n          \n          \n        }\n       </div>\n\n    );\n  }\n}\n\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.4100098c.png\";"],"sourceRoot":""}